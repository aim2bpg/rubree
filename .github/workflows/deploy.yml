name: Deploy

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Web App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.74.0

      - name: Install wasi-vfs
        env:
          WASI_VFS_VERSION: 0.5.5
        run: |
          curl -LO "https://github.com/kateinoigakukun/wasi-vfs/releases/download/v${WASI_VFS_VERSION}/wasi-vfs-cli-x86_64-unknown-linux-gnu.zip"
          unzip wasi-vfs-cli-x86_64-unknown-linux-gnu.zip
          sudo mv wasi-vfs /usr/local/bin/wasi-vfs

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.9
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: ./pwa/yarn.lock

      - name: Install Yarn
        run: npm install -g yarn

      - name: Cache Ruby Wasm Artefacts
        id: cache-ruby-wasm
        uses: actions/cache@v4
        with:
          path: |
            build
            rubies
          key: ${{ runner.os }}-v1-ruby-wasm

      - name: Cache Compiled ruby.wasm Module
        id: cache-ruby-wasm-module
        uses: actions/cache@v4
        with:
          path: tmp/wasmify/ruby.wasm
          key: ${{ runner.os }}-v1-${{ hashFiles('**/Gemfile.lock') }}-ruby-wasm-module

      - name: Build ruby.wasm (if needed)
        if: steps.cache-ruby-wasm-module.outputs.cache-hit != 'true'
        run: bin/rails wasmify:build

      - name: Pack app.wasm
        run: bin/rails wasmify:pack

      - name: Build PWA
        working-directory: pwa
        run: |
          yarn install
          yarn build

      - name: Upload GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './pwa/dist'

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
